type Query {
  users: [User]
  note(id: ID!): Note
  inbox: [Note]
  outbox: [Note]
  me: User
  validateCity(city: String!): Boolean!
  getCityCoords(city: String!): Coords
}

type Mutation {
  # TODO: use email for auth
  signup(
    password: String!
    username: String!
    avatar: Int!
    country: String!
    city: String!
    interests: [String!]!
  ): AuthPayload!
  login(username: String!, password: String!): AuthPayload!
  updateUser(
    avatar: Int!
    country: String!
    city: String!
    interests: [String!]!
  ): User!
  createNote(
    message: String!
    tags: [String!]!
    font: String!
    color: String!
    style: String!
  ): Note!
  viewNote(id: String!): Note!
  favoriteNote(id: String!): Note!
  createNoteResponse(id: String!, message: String!): Note!
  updateInterests(interests: [String!]!): User!
}

type Subscription {
  inboxSub: Note
}

type AuthPayload {
  token: String!
  user: User!
}

type User {
  id: ID!
  username: String!
  password: String!
  favoriteNotes: [Note]
  interests: [Interest!]!
  avatar: Int!
  city: String!
  country: String!
}

type Note {
  id: ID!
  message: String!
  createdAt: String!
  author: User!
  # TODO: rename to plural `topics`
  topic: [Interest!]!
  responses: [NoteResponse]
  viewers: [User]
  font: String!
  color: String!
  style: String!
}

type NoteResponse {
  id: ID!
  createdAt: String!
  message: String!
  author: User!
}

type Interest {
  id: ID!
  title: String!
}

type Coords {
  lat: String!
  lng: String!
}
